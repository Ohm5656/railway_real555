import os

# ===============================
# PATH CONFIG (Railway Persistent Volume)
# ===============================
# ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
BASE_MODEL_DIR = "/data/Model"

# ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å unzip ‡∏•‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å Model.zip
MODEL_FILES = {
    "size": "size.pt",        # ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ß‡∏±‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏∏‡πâ‡∏á
    "din": "din.pt",          # ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ï‡∏£‡∏ß‡∏à‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß (‡∏Å‡∏∏‡πâ‡∏á‡∏î‡∏¥‡πâ‡∏ô)
    "shrimp": "shrimp.pt",    # ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏∏‡πâ‡∏á‡∏•‡∏≠‡∏¢
    "water": "water_class.pt" # ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ô‡πâ‡∏≥
}

def get_model_path(model_key: str) -> str:
    """
    ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ path ‡πÄ‡∏ï‡πá‡∏°‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Railway Volume
    :param model_key: ‡πÄ‡∏ä‡πà‡∏ô "size", "din", "shrimp", "water"
    :return: path ‡πÄ‡∏ï‡πá‡∏°‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå ‡πÄ‡∏ä‡πà‡∏ô /data/Model/shrimp.pt
    """
    if model_key not in MODEL_FILES:
        raise ValueError(
            f"‚ùå Unknown model key: {model_key}. "
            f"‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà {list(MODEL_FILES.keys())}"
        )
    
    # path ‡πÄ‡∏ï‡πá‡∏°
    model_path = os.path.join(BASE_MODEL_DIR, MODEL_FILES[model_key])
    
    if not os.path.exists(model_path):
        raise FileNotFoundError(
            f"‚ùå Model file not found: {model_path}\n"
            f"üëâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ unzip Model.zip ‡∏•‡∏á‡πÉ‡∏ô /data/Model ‡πÅ‡∏•‡πâ‡∏ß"
        )
    
    print(f"‚úÖ Using model: {model_path}")
    return model_path

